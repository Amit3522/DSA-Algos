




There are N players, each with strength A[i]. when player i attack player j, player j strength reduces to max(0, A[j]-A[i]). When a player's strength reaches zero, it loses the game, and the game continues in the same manner among other players until only 1 survivor remains.

Can you tell the minimum health last surviving person can have?



Problem Constraints
1 <= N <= 100000

1 <= A[i] <= 1000000



Input Format
First and only argument of input contains a single integer array A.



Output Format
Return a single integer denoting minimum health of last person.



Example Input
Input 1:

 A = [6, 4]
Input 2:

 A = [2, 3, 4]


Example Output
Output 1:

 2
Output 2:

 1


Example Explanation
Explanation 1:

 Given strength array A = [6, 4]
 Second player attack first player, A =  [2, 4]
 First player attack second player twice. [2, 0]
Explanation 2:

 Given strength array A = [2, 3, 4]
 First player attack third player twice. [2, 3, 0]
 First player attack second player. [2, 1, 0]
 Second player attack first player twice. [0, 1, 0]







A = 2, 3, 4
N = 3 players

Strength of player 1 = 2
Strength of player 2 = 3
Strength of player 3 = 4

player 1 attacks player 2, 

player 2's strength will be reduced to Max(0,A[j]-A[i])
Strength of player 2 = max(0,(3-2))
			   = max(0,1) 
			   = 1




public class Solution {
    static int gcd(int a, int b){
        if(b==0){
            return a;
        }
        return gcd(b,a%b);
    }

    // create a pfx gcd array
    static int[] pfxgcd(int[] A){
        int l = A.length;
        int[] ans = new int[l];
        ans[0]=A[0];
        for(int i=1;i<l;i++){
            ans[i] = gcd(A[i],ans[i-1]);
        }
            return ans;
    }
    public int solve(int[] A) {
        int[] pfx = pfxgcd(A);
        return pfx[A.length-1];
    }
}




