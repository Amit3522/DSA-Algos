Reverse the bits of an 32 bit unsigned integer A.



Problem Constraints
0 <= A <= 232



Input Format
First and only argument of input contains an integer A.



Output Format
Return a single unsigned integer denoting the decimal value of reversed bits.



Example Input
Input 1:

 0
Input 2:

 3


Example Output
Output 1:

 0
Output 2:

 3221225472


Example Explanation
Explanation 1:

        00000000000000000000000000000000    
=>      00000000000000000000000000000000
Explanation 2:

        00000000000000000000000000000011    
=>      11000000000000000000000000000000


===


import java.util.*;
class Main {
	static long Reverse32bit(long a ){
		//convert long to 32 bit binary first
		long ans =0;
		long b = a;
		String s = new String();
		while(b>0){
			s=b%2+s;
			b=b/2;
		}
		// find length of the binary string
		int l1= s.length();
		//System.out.println(l1);
		// find difference between length of binary string and 32 bits
		int diff = 32 - l1; 
		//System.out.println(diff);

		//padd leading 0s to make the string 32 bit
		for(int i =0;i<diff;i++){
			s='0'+s;
		}
		// convert binary string to decimal
		
		for(int i =31;i>=0;i--){
			ans = ans + (s.charAt(i)-'0')*(long)Math.pow(2,i);
		}
		return ans;
	}

	public static void main(String args[]) {
		Scanner myScanner = new Scanner(System.in);
		long A = myScanner.nextLong();
		//System.out.print(A);

		long d = Reverse32bit(A);
		System.out.print(d);

	}
}