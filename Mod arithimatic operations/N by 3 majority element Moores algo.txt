
You're given a read-only array of N integers. Find out if any integer occurs more than N/3 times in the array in linear time and constant additional space.
If so, return the integer. If not, return -1.

If there are multiple solutions, return any one.

Problem Constraints
1 <= N <= 7*105
1 <= A[i] <= 109


Input Format
The only argument is an integer array A.


Output Format
Return an integer.


Example Input
[1 2 3 1 1]


Example Output
1


Example Explanation
1 occurs 3 times which is more than 5/3 times.




import java.util.*;
class Main {
	static int MajorityElement(List<Integer> a){
		int l = a.size();
		int el1 = -1;  
		int fr1 = 0;  

		int el2 = -1;
		int fr2 = 0; 

		for(int i =0;i<l;i++){
				if(a.get(i)==el1){
					fr1=fr1+1;
				}
				else if(a.get(i)==el2){
					fr2=fr2+1;
				}
				else if(fr1==0){
					el1=a.get(i);
					fr1=fr1+1;
				}
				else if(fr2==0){
					el2=a.get(i);
					fr2=fr2+1;
				}
				else{
					fr1=fr1-1;
					fr2=fr2-1;
				}

		}

		int c1 = 0 ; int c2 = 0;
		for (int i =0;i<l;i++){
			if(el1==a.get(i)){
				c1=c1+1;
			}
			else if(el2==a.get(i)){
				c2=c2+1;
			}
		}

		if (c1>l/3){
			return el1;
		}
		else if(c2>l/3){
			return el2;
		}
		return -1;
	}

	public static void main(String args[]) {
		Scanner myScanner = new Scanner(System.in);
		int n = myScanner.nextInt();
		List<Integer> A = new ArrayList<Integer>();
		for(int i =0;i<n;i++){
			A.add(myScanner.nextInt());
			//System.out.print(A.get(i));
		}

		int ans1= MajorityElement(A);
		System.out.print(ans1);

	}
}