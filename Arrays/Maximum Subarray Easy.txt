Problem Description
You are given an integer array C of size A. Now you need to find a subarray (contiguous elements) so that the sum of contiguous elements is maximum.
But the sum must not exceed B.

Example Input
Input 1:
A = 5
B = 12
C = [2, 1, 3, 4, 5]
Input 2:

A = 3
B = 1
C = [2, 2, 2]


Example Output
Output 1:
12
Output 2:

0

import java.util.Scanner;
class Main {
	static int maxSubArray(int A, int B, int[] C ){
		int maxsum= 0;
		for(int i=0;i<A;i++){
			int sum=0;
			for(int j=i;j<A;j++){
				sum=sum+C[j];
				if(sum>maxsum && sum<=B){
				maxsum=sum;
				}
			}
		}
			return maxsum;
	}
	public static void main(String args[]) {
		Scanner myScanner = new Scanner(System.in);
		int n = myScanner.nextInt();
		int m =myScanner.nextInt();
		int[] a= new int[n];
		for(int i=0;i<n;i++){
			a[i]=myScanner.nextInt();
			//System.out.print(a[i]);
		}
		int max =maxSubArray(n,m,a);
		System.out.print(max);
	}
}