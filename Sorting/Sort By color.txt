Problem Description
Given an array with N objects colored red, white, or blue, sort them so that objects of the same color are adjacent, with the colors in the order red, white, and blue.

We will use the integers 0, 1, and 2 to represent red, white, and blue, respectively.

Note: Using the library sort function is not allowed.



Problem Constraints
1 <= N <= 1000000
0 <= A[i] <= 2


Input Format
First and only argument of input contains an integer array A.


Output Format
Return an integer array in asked order


Example Input
Input 1 :
    A = [0 1 2 0 1 2]
Input 2:

    A = [0]


Example Output
Output 1:
    [0 0 1 1 2 2]
Output 2:

    [0]


Example Explanation
Explanation 1:
    [0 0 1 1 2 2] is the required order.









import java.util.*;
class Main {
	static ArrayList<Integer> sortyByColor(ArrayList<Integer> A){
		int l = A.size();
		ArrayList<Integer> A1 = new ArrayList<Integer>(); // 0
		ArrayList<Integer> A2 = new ArrayList<Integer>(); // 1
		ArrayList<Integer> A3 = new ArrayList<Integer>(); // 2

		for(int i =0;i<l;i++){
			if(A.get(i)==0){
				A1.add(A.get(i));
			}
			else if(A.get(i)==1){
				A2.add(A.get(i));
			}
			else{
				A3.add(A.get(i));
			}
		}

		ArrayList<Integer> AFinal = new ArrayList<Integer>();
		for(int i =0 ;i<A1.size();i++){
			AFinal.add(A1.get(i));
		}

		for(int i=0;i<A2.size();i++){
			AFinal.add(A2.get(i));
		}

		for(int i=0;i<A3.size();i++){
			AFinal.add(A3.get(i));
		}


		return AFinal;
	}





	public static void main(String args[]) {
		Scanner myScanner = new Scanner(System.in);
		int n = myScanner.nextInt();
		ArrayList<Integer> a = new ArrayList<Integer>();
		for(int i =0;i<n;i++){
			a.add(myScanner.nextInt());
			//System.out.print(a.get(i));
		}

		ArrayList<Integer> ans1 = sortyByColor(a);
		for(int i=0;i<n;i++){
			System.out.print(ans1.get(i));
		}

	}
}