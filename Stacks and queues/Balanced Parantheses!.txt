Problem Description
Given a string A consisting only of '(' and ')'.

You need to find whether parentheses in A are balanced or not, if it is balanced then return 1 else return 0.



Problem Constraints
1 <= |A| <= 105



Input Format
First argument is an string A.



Output Format
Return 1 if parantheses in string are balanced else return 0.



Example Input
Input 1:

 A = "(()())"
Input 2:

 A = "(()"


Example Output
Output 1:

 1
Output 2:

 0



public class Solution {

    public int solve(String A) {
        Stack<Character> st = new Stack<>();
        int l = A.length(); 
        for(int i=0;i<l;i++){
            if(A.charAt(i)=='(' || A.charAt(i)=='{' || A.charAt(i)=='['){
                    st.push(A.charAt(i));
            }
            if(A.charAt(i)==')'){
                if(st.empty()==true){
                    return 0;
                    
                }
                else if(st.peek()!='('){
                    return 0;
                   
                }
                else{
                    st.pop();
                   
                }
            }
            if(A.charAt(i)=='}'){
                if(st.empty()==true){
                    return 0;
                   
                }
                else if(st.peek()!='{'){
                    return 0;
                   
                }
                else{
                    st.pop();
                   
                }
            }
            if(A.charAt(i)==']'){
                if(st.empty()==true){
                    return 0;
                    
                }
                else if(st.peek()!='['){
                    return 0;
                    
                }
                else{
                    st.pop();
                    
                }
            }
    
        }

        if(st.empty()==false ){
            return 0;
        }
        return 1;
    }
}